import{_ as s,c as i,o as a,R as n}from"./chunks/framework.U_vFYqrf.js";const g=JSON.parse('{"title":"如何使用 Electron 打包网站项目","description":"","frontmatter":{"tags":["electron"]},"headers":[],"relativePath":"tech/frontend/electron-builder.md","filePath":"tech/frontend/electron-builder.md","lastUpdated":1701662868000}'),e={name:"tech/frontend/electron-builder.md"},t=n(`<h1 id="如何使用-electron-打包网站项目" tabindex="-1">如何使用 Electron 打包网站项目 <a class="header-anchor" href="#如何使用-electron-打包网站项目" aria-label="Permalink to &quot;如何使用 Electron 打包网站项目&quot;">​</a></h1><h2 id="前置依赖项" tabindex="-1">前置依赖项 <a class="header-anchor" href="#前置依赖项" aria-label="Permalink to &quot;前置依赖项&quot;">​</a></h2><ul><li>Node.js + NPM</li><li>Git</li><li>yarn（非必要）</li></ul><h2 id="项目打包流程" tabindex="-1">项目打包流程 <a class="header-anchor" href="#项目打包流程" aria-label="Permalink to &quot;项目打包流程&quot;">​</a></h2><blockquote><p><strong>温馨提示</strong><br> 只能打包成你当前操作系统可执行的文件，Windows 会打包成 <code>exe</code> 文件，macOS 会打包成 <code>dmg/app</code>。</p></blockquote><p>克隆 electron 官方示例项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/electron/electron-quick-start</span></span></code></pre></div><p>在项目根目录创建 <code>.npmrc</code> 文件，将 NPM 源替换为淘宝源，防止安装 electron 时超时：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https://registry.npmmirror.com</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">electron_mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https://npmmirror.com/mirrors/electron/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">chromedriver_cdnurl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https://npmmirror.com/mirrors/chromedriver</span></span></code></pre></div><p>初始化项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span></span></code></pre></div><p>安装第三方打包工具 <code>electron-builder</code>，打包更方便：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> electron-builder</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> electron-builder</span></span></code></pre></div><p>修改 <code>package.json</code> 文件，增加 <code>build</code> 命令:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;electron .&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;electron-builder&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>运行 <code>yarn build</code> or <code>npm run build</code> 进行打包，打包后的可执行文件在项目根目录的 <code>/dist</code> 文件夹中。</p><h2 id="electron-项目配置" tabindex="-1">Electron 项目配置 <a class="header-anchor" href="#electron-项目配置" aria-label="Permalink to &quot;Electron 项目配置&quot;">​</a></h2><h3 id="设置项目默认主页" tabindex="-1">设置项目默认主页 <a class="header-anchor" href="#设置项目默认主页" aria-label="Permalink to &quot;设置项目默认主页&quot;">​</a></h3><p>在根目录 <code>mian.js</code> 文件中找到当前行：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainWindow.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/index.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>项目默认运行根目录下的 <code>/index.html</code> 文件，这里可以替换成 <code>loadURL</code> 默认打开一个链接：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainWindow.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="设置窗口默认状态-窗口-全屏" tabindex="-1">设置窗口默认状态（窗口/全屏） <a class="header-anchor" href="#设置窗口默认状态-窗口-全屏" aria-label="Permalink to &quot;设置窗口默认状态（窗口/全屏）&quot;">​</a></h3><p>在根目录 <code>mian.js</code> 文件中找到当前代码段：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mainWindow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  webPreferences: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    preload: path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preload.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>项目默认以 <code>800x600</code> 像素的窗口模式打开，这里可以修改成默认全屏运行：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mainWindow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ show: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, autoHideMenuBar: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainWindow.fullScreen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainWindow.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,27),l=[t];function h(p,k,d,r,o,c){return a(),i("div",null,l)}const y=s(e,[["render",h]]);export{g as __pageData,y as default};
